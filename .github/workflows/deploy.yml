name: Deploy

on:
  pull_request:
    branches:
      - develop
    types:
      - closed

env:
  PUBLIC: "~/motsflex/public"
  ASSETS: "$PUBLIC/assets"
  INDEX_HTML: "$PUBLIC/index.html"
  DICOS: "~/dicos"
  SERVER: "~/motsflex/server.js"
  SSH_TARGET: ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    # if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Determine Deployment Type
        if: ${{ success() }}
        run: |
          echo "LABELS=${{ toJson(github.event.pull_request.labels.*.name) }}" >> $GITHUB_ENV
          echo "DEPLOY_ASSETS=${{ contains(env.LABELS, 'deploy:assets') }}" >> $GITHUB_ENV
          echo "DEPLOY_SERVER=${{ contains(env.LABELS, 'deploy:server') }}" >> $GITHUB_ENV
          echo "DEPLOY_CLIENT=${{ contains(env.LABELS, 'deploy:client') }}" >> $GITHUB_ENV
          if [[ "${{ env.DEPLOY_ASSETS || env.DEPLOY_SERVER || env.DEPLOY_CLIENT }} " == 'false' ]]; then
            core.setFailed("Nothing to deploy");
          fi

      - name: Install Dependencies
        if: ${{ success() }}
        run: npm install

      - name: Build
        if: ${{ success() }}
        run: npm run build

      - name: Deploy
        if: ${{ success() }}
        run: |
          echo "Github ref: $GITHUB_REF"
          if [[ "${{ env.DEPLOY_ASSETS }}" == 'true' ]]; then
            echo "Deploying JS assets"
            ssh $SSH_TARGET "rm -rf $ASSETS && mkdir -p $ASSETS"
            scp -r dist/public/assets $SSH_TARGET:$ASSETS
            scp -r dist/public/index.html $SSH_TARGET:$INDEX_HTML
          fi
          if [[ "${{ env.DEPLOY_CLIENT }}" == 'true' ]]; then
            echo "Deploying full client"
            ssh $SSH_TARGET "rm -rf $PUBLIC && mkdir -p $PUBLIC"
            scp -r dist/public $SSH_TARGET:$PUBLIC
            ssh $SSH_TARGET "cp $DICOS/*.zip $ASSETS"
          fi
          if [[ "${{ env.DEPLOY_SERVER }}" == 'true' ]]; then
            echo "Deploying server code"
            scp -r dist/server.js $SSH_TARGET:$SERVER
          fi
