import{_ as i,M as s,p as c,q as h,R as e,N as r,V as a,t,a1 as d}from"./framework-5866ffd3.js";const l={},u=e("h1",{id:"class-dico",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-dico","aria-hidden":"true"},"#"),t(" Class: Dico")],-1),f=d('<p>Dico is a sigleton class that contains the dictionnary It is used to search for words in the grid</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new Dico</strong>()</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',5),p={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L27",target:"_blank",rel:"noopener noreferrer"},_=d('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="loadingpromise" tabindex="-1"><a class="header-anchor" href="#loadingpromise" aria-hidden="true">#</a> loadingPromise</h3><p>• <code>Private</code> <strong>loadingPromise</strong>: <code>Promise</code>&lt;<code>void</code>&gt;</p><p>The promise that will resolve when the dictionnary is loaded</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',5),m={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L20",target:"_blank",rel:"noopener noreferrer"},g=e("hr",null,null,-1),b=e("h3",{id:"occurencies",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#occurencies","aria-hidden":"true"},"#"),t(" occurencies")],-1),x=e("strong",null,"occurencies",-1),y=e("code",null,"OccurenceMap",-1),v=e("p",null,"The occurences of the words in the dictionnary The first element is for 2 letters lemmes The second element is for 3 letters lemmes",-1),w=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),D={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L26",target:"_blank",rel:"noopener noreferrer"},L=d('<hr><h3 id="words" tabindex="-1"><a class="header-anchor" href="#words" aria-hidden="true">#</a> words</h3><p>• <strong>words</strong>: <code>string</code>[] = <code>[]</code></p><p>The list of words in the dictionnary</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',5),T={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L12",target:"_blank",rel:"noopener noreferrer"},N=d('<hr><h3 id="wordsmap" tabindex="-1"><a class="header-anchor" href="#wordsmap" aria-hidden="true">#</a> wordsMap</h3><p>• <strong>wordsMap</strong>: <code>Map</code>&lt;<code>string</code>, <code>number</code>&gt;</p><p>The map of words in the dictionnary</p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',5),k={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L16",target:"_blank",rel:"noopener noreferrer"},P=d('<h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="addwordstodictionnary" tabindex="-1"><a class="header-anchor" href="#addwordstodictionnary" aria-hidden="true">#</a> addWordsToDictionnary</h3><p>▸ <strong>addWordsToDictionnary</strong>(<code>data</code>): <code>void</code></p><p>Add a word or a list of words to the dictionnary</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code> | <code>string</code>[]</td><td style="text-align:left;">The word or the list of words to add</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',9),R={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L119",target:"_blank",rel:"noopener noreferrer"},M=d('<hr><h3 id="countoccurences" tabindex="-1"><a class="header-anchor" href="#countoccurences" aria-hidden="true">#</a> countOccurences</h3><p>▸ <strong>countOccurences</strong>(<code>«destructured»</code>): <code>void</code></p><p>For each letter of a word, count the occurences of the 2 or 3 letters lemmes and add it to the occurences map</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',5),O=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),W=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"«destructured»")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Object")])],-1),I=e("tr",null,[e("td",{style:{"text-align":"left"}},[t("› "),e("code",null,"index")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")])],-1),V=e("tr",null,[e("td",{style:{"text-align":"left"}},[t("› "),e("code",null,"length")]),e("td",{style:{"text-align":"left"}},[e("code",null,"3"),t(" | "),e("code",null,"2")])],-1),A=e("td",{style:{"text-align":"left"}},[t("› "),e("code",null,"occs")],-1),C={style:{"text-align":"left"}},B=e("code",null,"OccurenceMap",-1),E=e("tr",null,[e("td",{style:{"text-align":"left"}},[t("› "),e("code",null,"word")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")])],-1),F=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),S=e("p",null,[e("code",null,"void")],-1),j=e("p",null,"The occurence map of the words",-1),q=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),G={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L43",target:"_blank",rel:"noopener noreferrer"},z=d('<hr><h3 id="getwords" tabindex="-1"><a class="header-anchor" href="#getwords" aria-hidden="true">#</a> getWords</h3><p>▸ <strong>getWords</strong>(): <code>Promise</code>&lt;<code>string</code>[]&gt;</p><p>Get the list of words in the dictionnary</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>string</code>[]&gt;</p><p>All the words in the dictionnary</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',8),H={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L210",target:"_blank",rel:"noopener noreferrer"},J=d('<hr><h3 id="getwordssync" tabindex="-1"><a class="header-anchor" href="#getwordssync" aria-hidden="true">#</a> getWordsSync</h3><p>▸ <strong>getWordsSync</strong>(): <code>string</code>[]</p><p>If you know that the dictionnary is already loaded</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>string</code>[]</p><p>All the words in the dictionnary</p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',8),K={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L217",target:"_blank",rel:"noopener noreferrer"},Q=d('<hr><h3 id="loaddictionary" tabindex="-1"><a class="header-anchor" href="#loaddictionary" aria-hidden="true">#</a> loadDictionary</h3><p>▸ <strong>loadDictionary</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Load the dictionnary from the files in the dictionnary folder And in the user&#39;s dictionary</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>The promise that will resolve when the dictionnary is loaded</p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',8),U={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L98",target:"_blank",rel:"noopener noreferrer"},X=d('<hr><h3 id="removeoccurence" tabindex="-1"><a class="header-anchor" href="#removeoccurence" aria-hidden="true">#</a> removeOccurence</h3><p>▸ <strong>removeOccurence</strong>(<code>occsToRemove</code>, <code>targetOccs</code>, <code>dicoIndex</code>): <code>void</code></p><p>Remove the occurences of a word from the occurences map</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4>',5),Y=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Z=e("td",{style:{"text-align":"left"}},[e("code",null,"occsToRemove")],-1),$={style:{"text-align":"left"}},ee=e("code",null,"OccurenceMap",-1),te=e("td",{style:{"text-align":"left"}},"The occurenceMap generated by the word to remove",-1),re=e("td",{style:{"text-align":"left"}},[e("code",null,"targetOccs")],-1),oe={style:{"text-align":"left"}},de=e("code",null,"OccurenceMap",-1),ne=e("td",{style:{"text-align":"left"}},"The occurenceMap to cleanup",-1),ae=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"dicoIndex")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The index of the word to remove in the dictionnary")],-1),se=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5","aria-hidden":"true"},"#"),t(" Returns")],-1),ie=e("p",null,[e("code",null,"void")],-1),ce=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),he={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L75",target:"_blank",rel:"noopener noreferrer"},le=d('<hr><h3 id="removewordsfromdictionary" tabindex="-1"><a class="header-anchor" href="#removewordsfromdictionary" aria-hidden="true">#</a> removeWordsFromDictionary</h3><p>▸ <strong>removeWordsFromDictionary</strong>(<code>data</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Remove a word or a list of words from the dictionnary Do not remove it from the array of words, just unreference it from the occurence map and from the wordsMap</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code> | <code>string</code>[]</td><td style="text-align:left;">The word or the list of words to remove</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',9),ue={href:"https://github.com/Leo-Nicolle/mots-fleches/blob/4ca3038/server/lib/search/dico.ts#L161",target:"_blank",rel:"noopener noreferrer"};function fe(pe,_e){const n=s("RouterLink"),o=s("ExternalLinkIcon");return c(),h("div",null,[e("p",null,[r(n,{to:"/server/"},{default:a(()=>[t("server")]),_:1}),t(" / "),r(n,{to:"/server/modules.html"},{default:a(()=>[t("Modules")]),_:1}),t(" / "),r(n,{to:"/server/modules/search_dico.html"},{default:a(()=>[t("search/dico")]),_:1}),t(" / Dico")]),u,e("p",null,[r(n,{to:"/server/modules/search_dico.html"},{default:a(()=>[t("search/dico")]),_:1}),t(".Dico")]),f,e("p",null,[e("a",p,[t("search/dico.ts:27"),r(o)])]),_,e("p",null,[e("a",m,[t("search/dico.ts:20"),r(o)])]),g,b,e("p",null,[t("• "),x,t(": "),r(n,{to:"/server/modules/search_types.html#occurencemap"},{default:a(()=>[y]),_:1}),t("[]")]),v,w,e("p",null,[e("a",D,[t("search/dico.ts:26"),r(o)])]),L,e("p",null,[e("a",T,[t("search/dico.ts:12"),r(o)])]),N,e("p",null,[e("a",k,[t("search/dico.ts:16"),r(o)])]),P,e("p",null,[e("a",R,[t("search/dico.ts:119"),r(o)])]),M,e("table",null,[O,e("tbody",null,[W,I,V,e("tr",null,[A,e("td",C,[r(n,{to:"/server/modules/search_types.html#occurencemap"},{default:a(()=>[B]),_:1})])]),E])]),F,S,j,q,e("p",null,[e("a",G,[t("search/dico.ts:43"),r(o)])]),z,e("p",null,[e("a",H,[t("search/dico.ts:210"),r(o)])]),J,e("p",null,[e("a",K,[t("search/dico.ts:217"),r(o)])]),Q,e("p",null,[e("a",U,[t("search/dico.ts:98"),r(o)])]),X,e("table",null,[Y,e("tbody",null,[e("tr",null,[Z,e("td",$,[r(n,{to:"/server/modules/search_types.html#occurencemap"},{default:a(()=>[ee]),_:1})]),te]),e("tr",null,[re,e("td",oe,[r(n,{to:"/server/modules/search_types.html#occurencemap"},{default:a(()=>[de]),_:1})]),ne]),ae])]),se,ie,ce,e("p",null,[e("a",he,[t("search/dico.ts:75"),r(o)])]),le,e("p",null,[e("a",ue,[t("search/dico.ts:161"),r(o)])])])}const ge=i(l,[["render",fe],["__file","search_dico.Dico.html.vue"]]);export{ge as default};
